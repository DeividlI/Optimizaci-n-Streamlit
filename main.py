import streamlit as st

st.set_page_config(
    page_title="Proyecto de Optimizaci√≥n",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

import numpy as np
from busqueda_exhaustiva import show_busqueda_exhaustiva
from fase_acotamiento import show_fase_acotamiento
from region_elimination import show_region_elimination
from intervalos_mitad import show_intervalos_mitad
from fibonacci_search import show_fibonacci_search
from golden_section_search import show_golden_section_search
from newton_raphson import show_newton_raphson
from metodo_biseccion import show_biseccion_search
from metodo_secante import show_metodo_secante
from nelder_mead import show_nelder_mead
from hooke_jeeves import show_hooke_jeeves
from random_walk import show_random_walk
from hill_climbing import show_hill_climbing
from simulated_annealing import show_simulated_annealing
from cauchy_method import show_cauchy_method
from newton_method import show_newton_method
from conjugate_gradient import show_conjugate_gradient
from unidirectional_search import show_busqueda_unidireccional

FUNCIONES_UNIVARIADAS = {
    "Funci√≥n 1": {
        "intervalos": [(0.001, 10, lambda x: x**2 + 54/x)], # Ajustado el inicio a 0.001 para evitar divisi√≥n por cero
        "latex": r'''f(x) = x^2 + \frac{54}{x}''',
        "latex_derivada": r'''f'(x) = 2x - \frac{54}{x^2}''',
        "dominio": "(0, 10]"
    },
    "Funci√≥n 2": {
        "intervalos": [(0, 5, lambda x: x**3 + 2*x - 3)],
        "latex": r'''f(x) = x^3 + 2x - 3''',
        "latex_derivada": r'''f'(x) = 3x^2 + 2''',
        "dominio": "(0, 5]"
    },
    "Funci√≥n 3": {
        "intervalos": [(-2.5, 2.5, lambda x: x**4 + x**2 - 33)],
        "latex": r'''f(x) = x^4 + x^2 - 33''',
        "latex_derivada": r'''f'(x) = 4x^3 + 2x''',
        "dominio": "[-2.5, 2.5]"
    },
    "Funci√≥n 4": {
        "intervalos": [(-1.5, 3, lambda x: 3*x**4 - 8*x**3 - 6*x**2 + 12*x)],
        "latex": r'''f(x) = 3x^4 - 8x^3 - 6x^2 + 12x''',
        "latex_derivada": r'''f'(x) = 12x^3 - 24x^2 - 12x + 12''',
        "dominio": "[-1.5, 3]"
    },
    "Funci√≥n Lata": {
        "intervalos": [(0.001, 10, lambda x: 2*np.pi*x*x + (500 / x))], # Ajustado el inicio a 0.001
        "latex": r'''f(x) = 2\pi r^2 + \frac{500}{r}''',
        "latex_derivada": r'''f'(x) = 4\pi r - \frac{500}{r^2}''',
        "dominio": "(0, ‚àû)"
    },
    "Funci√≥n Caja": {
        "intervalos": [(0.1, 10, lambda x: 4*x**3 - 60*x**2 + 200*x)], # Se asume una funci√≥n de volumen de caja correcta
        "latex": r'''f(x) = 4x^3 - 60x^2 + 200x''', # Formato para la caja, asumimos que x es la altura
        "latex_derivada": r'''f'(x) = 12x^2 - 120x + 200''',
        "dominio": "(0, ‚àû)"
    }
}

# Modificado para manejar errores de divisi√≥n por cero o fuera de dominio
def evaluar_funcion_univariada(x, funcion_nombre):
    intervalos_info = FUNCIONES_UNIVARIADAS[funcion_nombre]["intervalos"]

    for inicio, fin, func in intervalos_info:
        # Manejo espec√≠fico para funciones con divisi√≥n por cero en x=0
        if (funcion_nombre == "Funci√≥n 1" or funcion_nombre == "Funci√≥n Lata") and x == 0:
            return np.inf # Un valor "malo" para la minimizaci√≥n

        if inicio <= x <= fin:
            try:
                return func(x)
            except (ValueError, ZeroDivisionError):
                return np.inf # Retorna infinito si hay un error matem√°tico
    
    # En caso de que x est√© fuera de los intervalos definidos (lo cual no deber√≠a pasar si los intervalos cubren el dominio)
    # o si la l√≥gica anterior no captur√≥ el error
    try:
        # Intentar evaluar con la primera funci√≥n si no se encontr√≥ en el bucle
        return intervalos_info[0][2](x)
    except (ValueError, ZeroDivisionError):
        return np.inf # Retorna infinito si hay un error matem√°tico inesperado


def evaluar_derivada(x, funcion_nombre):
    derivadas = {
        "Funci√≥n 1": lambda x: 2*x - 54/(x**2),
        "Funci√≥n 2": lambda x: 3*x**2 + 2,
        "Funci√≥n 3": lambda x: 4*x**3 + 2*x,
        "Funci√≥n 4": lambda x: 12*x**3 - 24*x**2 - 12*x + 12, # Corregida la derivada de Funci√≥n 4
        "Funci√≥n Lata": lambda x: 4*np.pi*x - 500/(x**2),
        "Funci√≥n Caja": lambda x: 12*x**2 - 120*x + 200 # Corregida la derivada de Funci√≥n Caja
    }
    if funcion_nombre in derivadas:
        try:
            # Manejo espec√≠fico para derivadas con divisi√≥n por cero en x=0
            if (funcion_nombre == "Funci√≥n 1" or funcion_nombre == "Funci√≥n Lata") and x == 0:
                raise ZeroDivisionError("Derivada indefinida en x=0")
            return derivadas[funcion_nombre](x)
        except (ValueError, ZeroDivisionError) as e:
            raise ValueError(f"Error al evaluar la derivada en x = {x}: {e}")
    else:
        raise ValueError(f"Derivada no definida para la funci√≥n: {funcion_nombre}")

def evaluar_funcion_multivariada(x, funcion_nombre):
    if funcion_nombre in FUNCIONES_MULTIVARIADAS:
        try: return FUNCIONES_MULTIVARIADAS[funcion_nombre]["funcion"](x)
        except Exception as e:
            st.error(f"Error al evaluar la funci√≥n multivariada '{funcion_nombre}' en el punto {x}: {e}")
            return None
    else: raise ValueError(f"Funci√≥n multivariada no encontrada: {funcion_nombre}")

FUNCIONES_MULTIVARIADAS = {
    "Rastrigin": {
        "funcion": lambda x: 10 * 2 + (x[0]**2 - 10 * np.cos(2 * np.pi * x[0])) + (x[1]**2 - 10 * np.cos(2 * np.pi * x[1])),
        "gradiente": lambda x: np.array([2*x[0] + 20*np.pi*np.sin(2*np.pi*x[0]), 2*x[1] + 20*np.pi*np.sin(2*np.pi*x[1])]),
        "intervalos": [(-5.12, 5.12), (-5.12, 5.12)],
        "latex": r"f(x, y) = 20 + (x^2 - 10 \cos(2\pi x)) + (y^2 - 10 \cos(2\pi y))",
        "dominio": "[-5.12, 5.12] x [-5.12, 5.12]",
        "minimo": "f(0, 0) = 0",
        "minimo_coords": np.array([0.0, 0.0])
    },
    "Ackley": {
        "funcion": lambda x: -20 * np.exp(-0.2 * np.sqrt(0.5 * (x[0]**2 + x[1]**2))) - np.exp(0.5 * (np.cos(2 * np.pi * x[0]) + np.cos(2 * np.pi * x[1]))) + np.e + 20,
        "gradiente": lambda x: np.array([
            (2*x[0]*np.exp(-0.2*np.sqrt(0.5*(x[0]**2+x[1]**2))))/(np.sqrt(0.5*(x[0]**2+x[1]**2))+1e-9) + np.pi*np.sin(2*np.pi*x[0])*np.exp(0.5*(np.cos(2*np.pi*x[0])+np.cos(2*np.pi*x[1]))),
            (2*x[1]*np.exp(-0.2*np.sqrt(0.5*(x[0]**2+x[1]**2))))/(np.sqrt(0.5*(x[0]**2+x[1]**2))+1e-9) + np.pi*np.sin(2*np.pi*x[1])*np.exp(0.5*(np.cos(2*np.pi*x[1])+np.cos(2*np.pi*x[0]))) # Corregida la derivada para evitar repetici√≥n
        ]),
        "intervalos": [(-5, 5), (-5, 5)],
        "latex": r"f(x,y) = -20e^{-0.2\sqrt{0.5(x^2+y^2)}} - e^{0.5(\cos(2\pi x)+\cos(2\pi y))} + e + 20",
        "dominio": "[-5, 5] x [-5, 5]",
        "minimo": "f(0, 0) = 0",
        "minimo_coords": np.array([0.0, 0.0])
    },
    "Sphere": {
        "funcion": lambda x: x[0]**2 + x[1]**2,
        "gradiente": lambda x: np.array([2*x[0], 2*x[1]]),
        "intervalos": [(-10, 10), (-10, 10)],
        "latex": r"f(x, y) = x^2 + y^2",
        "dominio": "[-10, 10] x [-10, 10]",
        "minimo": "f(0, 0) = 0",
        "minimo_coords": np.array([0.0, 0.0])
    },
    "Rosenbrock": {
        "funcion": lambda x: 100 * (x[1] - x[0]**2)**2 + (1 - x[0])**2,
        "gradiente": lambda x: np.array([-400*x[0]*(x[1]-x[0]**2) - 2*(1-x[0]), 200*(x[1]-x[0]**2)]),
        "intervalos": [(-2, 2), (-1, 3)],
        "latex": r"f(x, y) = 100(y - x^2)^2 + (1 - x)^2",
        "dominio": "[-2, 2] x [-1, 3]",
        "minimo": "f(1, 1) = 0",
        "minimo_coords": np.array([1.0, 1.0])
    },
    "Beale": {
        "funcion": lambda x: (1.5 - x[0] + x[0]*x[1])**2 + (2.25 - x[0] + x[0]*x[1]**2)**2 + (2.625 - x[0] + x[0]*x[1]**3)**2,
        "gradiente": lambda x: np.array([2*(1.5 - x[0] + x[0]*x[1])*(-1 + x[1]) + 2*(2.25 - x[0] + x[0]*x[1]**2)*(-1 + x[1]**2) + 2*(2.625 - x[0] + x[0]*x[1]**3)*(-1 + x[1]**3), 2*(1.5 - x[0] + x[0]*x[1])*x[0] + 2*(2.25 - x[0] + x[0]*x[1]**2)*(2*x[0]*x[1]) + 2*(2.625 - x[0] + x[0]*x[1]**3)*(3*x[0]*x[1]**2)]),
        "intervalos": [(-4.5, 4.5), (-4.5, 4.5)],
        "latex": r"f(x,y) = (1.5 - x + xy)^2 + (2.25 - x + xy^2)^2 + (2.625 - x + xy^3)^2",
        "dominio": "[-4.5, 4.5] x [-4.5, 4.5]",
        "minimo": "f(3, 0.5) = 0",
        "minimo_coords": np.array([3.0, 0.5])
    },
    "Booth": {
        "funcion": lambda x: (x[0] + 2*x[1] - 7)**2 + (2*x[0] + x[1] - 5)**2,
        "gradiente": lambda x: np.array([2*(x[0] + 2*x[1] - 7) + 4*(2*x[0] + x[1] - 5), 4*(x[0] + 2*x[1] - 7) + 2*(2*x[0] + x[1] - 5)]),
        "intervalos": [(-10, 10), (-10, 10)],
        "latex": r"f(x, y) = (x + 2y - 7)^2 + (2x + y - 5)^2",
        "dominio": "[-10, 10] x [-10, 10]",
        "minimo": "f(1, 3) = 0",
        "minimo_coords": np.array([1.0, 3.0])
    },
    "Himmelblau": {
        "funcion": lambda x: (x[0]**2 + x[1] - 11)**2 + (x[0] + x[1]**2 - 7)**2,
        "gradiente": lambda x: np.array([4*x[0]*(x[0]**2 + x[1] - 11) + 2*(x[0] + x[1]**2 - 7), 2*(x[0]**2 + x[1] - 11) + 4*x[1]*(x[0] + x[1]**2 - 7)]),
        "intervalos": [(-5, 5), (-5, 5)],
        "latex": r"f(x, y) = (x^2 + y - 11)^2 + (x + y^2 - 7)^2",
        "dominio": "[-5, 5] x [-5, 5]",
        "minimo": "Varios m√≠nimos, ej: f(3, 2) = 0",
        "minimo_coords": np.array([3.0, 2.0])
    },
    "McCormick": {
        "funcion": lambda x: np.sin(x[0] + x[1]) + (x[0] - x[1])**2 - 1.5*x[0] + 2.5*x[1] + 1,
        "gradiente": lambda x: np.array([np.cos(x[0] + x[1]) + 2*(x[0] - x[1]) - 1.5, np.cos(x[0] + x[1]) - 2*(x[0] - x[1]) + 2.5]),
        "intervalos": [(-1.5, 4), (-3, 4)],
        "latex": r"f(x, y) = \sin(x + y) + (x - y)^2 - 1.5x + 2.5y + 1",
        "dominio": "[-1.5, 4] x [-3, 4]",
        "minimo": "f(-0.547, -1.547) ‚âà -1.913",
        "minimo_coords": np.array([-0.547, -1.547])
    }
}


# --- ESTILOS CON CSS ---
st.markdown("""
<style>
/* --- INICIO DE NUEVOS ESTILOS Y MEJORAS --- */

/* --- Estilos Globales --- */
body {
    font-family: 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', sans-serif;
    color: #333;
    background-color: #f0f2f6; /* Un gris muy claro para el fondo principal */
}

/* --- T√≠tulos y Texto --- */
h1, h2, h3, h4, h5, h6 {
    color: #1a252f;
}

h2 {
    border-bottom: 2px solid #667eea;
    padding-bottom: 10px;
    margin-top: 40px;
}

h3 {
    color: #4a4a4a;
    margin-top: 30px;
}

/* --- Barra Lateral (Sidebar) --- */
[data-testid="stSidebar"] {
    background-color: #ffffff;
    border-right: 1px solid #e6e6e6;
}
.sidebar-title {
    font-size: 24px;
    font-weight: bold;
    color: #667eea;
    text-align: center;
    margin-bottom: 20px;
    padding: 10px;
    border-bottom: 2px solid #764ba2;
}
.author-name {
    font-size: 16px;
    color: #7f8c8d;
    text-align: center;
    margin-top: 20px;
    font-style: italic;
}
/* Estilo para los radio buttons del men√∫ principal */
div[role="radiogroup"] > label {
    display: block;
    padding: 10px 15px;
    margin: 5px 0;
    border-radius: 8px;
    border: 1px solid #ddd;
    transition: all 0.2s ease-in-out;
}
div[role="radiogroup"] > label:hover {
    background-color: #f0f2f6;
    border-color: #667eea;
}

/* --- T√≠tulo Principal --- */
.main-title {
    font-size: 42px;
    font-weight: bold;
    color: #2c3e50;
    text-align: center;
    margin-bottom: 30px;
    padding: 20px;
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.05);
}

/* --- Contenedores y Tarjetas --- */
.grid-background {
    font-size: 18px;
    color: #34495e;
    text-align: left; /* Mejor para leer */
    padding: 40px;
    background-color: #ffffff;
    border-radius: 12px;
    border: 1px solid #e6e6e6;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    margin: 20px 0;
}
/* Estilo para st.metric */
[data-testid="stMetric"] {
    background-color: #ffffff;
    border-left: 5px solid #667eea;
    padding: 15px 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}
[data-testid="stMetric"] > div:nth-child(2) {
    color: #667eea !important;
}

/* --- Botones --- */
.stButton > button {
    width: 100%;
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 12px;
    margin: 5px 0;
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}
.stButton > button:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(102,126,234,0.4);
}
.stButton > button:active {
    transform: translateY(0);
}

/* --- Otros Componentes de Streamlit --- */
/* Mensajes de informaci√≥n */
[data-testid="stInfo"], [data-testid="stSuccess"], [data-testid="stWarning"], [data-testid="stError"] {
    border-radius: 8px;
    border-left-width: 5px;
    padding: 15px;
}
[data-testid="stExpander"] {
    border: 1px solid #e6e6e6;
    border-radius: 8px;
    background-color: #ffffff;
}
[data-testid="stExpander"] > details > summary {
    font-size: 1.1em;
    font-weight: bold;
    color: #2c3e50;
}
/* Bloques de c√≥digo y LaTeX */
div[data-testid="stCodeBlock"], .stLatex {
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

/* --- FIN DE NUEVOS ESTILOS --- */
</style>
""", unsafe_allow_html=True)

# --- BARRA LATERAL ---
with st.sidebar:
    st.markdown('<div class="sidebar-title">Proyecto Final de Optimizaci√≥n</div>', unsafe_allow_html=True)

    st.session_state.main_view = st.radio(
        "Men√∫ Principal",
        ["P√°gina Principal", "Contexto de la Materia", "Algoritmos de Optimizaci√≥n"],
        key="main_nav"
    )

    if st.session_state.main_view == "Algoritmos de Optimizaci√≥n":
        st.markdown("---")
        st.markdown("### M√©todos Univariados")

        univariados_options = [
            "B√∫squeda Exhaustiva",
            "M√©todo de fase de acotamiento",
            "M√©todo de Eliminaci√≥n de Regiones",
            "Intervalos por la mitad",
            "Fibonacci Search Method",
            "Golden Section Search Method",
            "M√©todo de Newton-Raphson",
            "M√©todo de Bisecci√≥n",
            "M√©todo de la secante"
        ]
        for option in univariados_options:
            if st.button(option, key=f"btn_{option}"):
                st.session_state.current_page = option

        st.markdown("### M√©todos Multivariados")
        multivariados_options = [
            "B√∫squeda Unidireccional",
            "Nelder-Mead Simplex", "Hooke-Jeeves - Movimiento exploratorio", "Random Walk (Caminata Aleatoria)",
            "Ascenso/Descenso de la colina (Hill Climbing)", "Recocido Simulado (Simulated Annealing)",
            "M√©todo de Cauchy", "M√©todo de Newton", "Gradiente Conjugado"
        ]
        for option in multivariados_options:
            if st.button(option, key=f"btn_{option}"):
                st.session_state.current_page = option

    st.markdown('<div class="author-name">üòé Oscar David L√≥pez Ibarra ü§†</div>', unsafe_allow_html=True)


# --- √ÅREA DE CONTENIDO PRINCIPAL ---

if st.session_state.main_view != "Algoritmos de Optimizaci√≥n":
    st.session_state.current_page = "P√°gina Principal"

# Vista de P√°gina Principal
if st.session_state.main_view == "P√°gina Principal":
    st.markdown(f'<h1 class="main-title">Proyecto Final de Optimizaci√≥n</h1>', unsafe_allow_html=True)
    st.markdown("""
    <div class="grid-background">
        <h2>Bienvenido a la Aplicaci√≥n Interactiva de M√©todos de Optimizaci√≥n</h2>
        <p>Esta plataforma ha sido dise√±ada para explorar, ejecutar y visualizar una amplia gama de algoritmos de optimizaci√≥n, tanto univariados como multivariados.</p>
        <p>Utiliza el men√∫ lateral para navegar entre las diferentes secciones:</p>
        <ul>
            <li><b>Contexto de la Materia:</b> Aprende los conceptos te√≥ricos fundamentales de la optimizaci√≥n.</li>
            <li><b>Algoritmos de Optimizaci√≥n:</b> Experimenta con cada uno de los m√©todos implementados.</li>
        </ul>
    </div>
    """, unsafe_allow_html=True)

# Vista de Contexto de la Materia
elif st.session_state.main_view == "Contexto de la Materia":
    st.markdown(f'<h1 class="main-title">Contexto de la Materia de Optimizaci√≥n</h1>', unsafe_allow_html=True)
    st.markdown("Un resumen de los conceptos clave presentados en el material de clase.")

    st.header("¬øQu√© es la Optimizaci√≥n?")
    st.write("""
    Matem√°ticamente, la optimizaci√≥n consiste en encontrar la **mejor soluci√≥n posible** para un problema, lo cual se logra cambiando el valor de variables que se pueden controlar. Este proceso a menudo est√° sujeto a un conjunto de restricciones.

    Cualquier problema que requiera la toma de una decisi√≥n puede ser formulado como un problema de optimizaci√≥n. Su atractivo es universal, ya que se aplica en todos los dominios del conocimiento y responde al deseo humano de mejorar las cosas.
    """)

    st.header("Componentes de un Problema de Optimizaci√≥n")
    st.markdown("""
    Todo problema de optimizaci√≥n se compone de los siguientes elementos:
    - **Funci√≥n Objetivo:** Es la funci√≥n que se desea minimizar o maximizar. Debe ser un valor escalar que se calcula a partir de las variables de decisi√≥n. Por convenci√≥n, los problemas de maximizaci√≥n se convierten en problemas de minimizaci√≥n de la siguiente forma: `max[f(x)] = -min[-f(x)]`.
    - **Variables de Decisi√≥n:** Son las variables que describen el sistema y que se pueden controlar o modificar. Se representan com√∫nmente como un vector.
    - **L√≠mites (Bounds):** Definen los valores m√°ximos y m√≠nimos que cada variable de decisi√≥n puede tomar. Esta informaci√≥n ayuda a acotar el espacio de b√∫squeda para los algoritmos.
    - **Restricciones:** Son relaciones funcionales que deben satisfacerse. Definen la **regi√≥n factible**, que es el conjunto de todas las soluciones que cumplen con las restricciones. Existen dos tipos: de igualdad ($h_k(x)=0$) y de desigualdad ($g_j(x) \ge 0$).
    """)

    st.header("Formas de Abordar la Optimizaci√≥n")
    st.write("Existen cuatro enfoques principales para resolver un problema de optimizaci√≥n:")

    st.subheader("1. M√©todos Anal√≠ticos")
    st.write("Basados en el c√°lculo diferencial cl√°sico. Se busca el punto donde las derivadas de la funci√≥n objetivo son cero. No requieren una computadora, pero su aplicaci√≥n es limitada a problemas con pocas variables y sin alta no-linealidad.")

    st.subheader("2. M√©todos Gr√°ficos")
    st.write("Requieren dibujar la funci√≥n a optimizar. Son muy √∫tiles para visualizar el problema, pero su utilidad se limita a problemas con una o dos variables.")

    st.subheader("3. M√©todos Experimentales")
    st.write("Consisten en ajustar los valores de las variables de forma secuencial y evaluar el resultado en cada paso. Pueden acercarse al √≥ptimo, pero pueden fallar si las variables interact√∫an entre s√≠ y necesitan ser ajustadas simult√°neamente.")

    st.subheader("4. M√©todos Num√©ricos")
    st.write("""
    Son el enfoque m√°s importante y general. Utilizan un procedimiento iterativo para generar una serie de soluciones que mejoran progresivamente, partiendo de una estimaci√≥n inicial. El proceso finaliza cuando se alcanza un criterio de convergencia.

    Estos m√©todos pueden resolver problemas altamente complejos que no son tratables anal√≠ticamente y son f√°ciles de programar en una computadora, lo que ha llevado a que reemplacen casi por completo a los otros enfoques. La disciplina que los estudia se conoce como **Programaci√≥n Matem√°tica**.
    """)

    st.header("Conceptos Clave Adicionales")
    st.markdown("""
    - **√ìptimo Local vs. Global:** Un punto es un √≥ptimo local si es el mejor en su vecindario inmediato. Un punto es un √≥ptimo global si es el mejor en todo el espacio de b√∫squeda.
    - **Funciones Unimodales y Multimodales:** Las funciones unimodales tienen un solo m√≠nimo, mientras que las multimodales tienen m√∫ltiples m√≠nimos.
    - **Convexidad:** Una funci√≥n es convexa si el segmento que une dos puntos cualesquiera de su gr√°fica queda por encima de la misma. Las funciones convexas tienen la valiosa propiedad de que cualquier m√≠nimo local es tambi√©n un m√≠nimo global.
    """)

# Vista de Algoritmos de Optimizaci√≥n
elif st.session_state.main_view == "Algoritmos de Optimizaci√≥n":
    if 'current_page' not in st.session_state or st.session_state.current_page == "P√°gina Principal":
        st.session_state.current_page = "Algoritmos de Optimizaci√≥n"

    st.markdown(f'<h1 class="main-title">{st.session_state.current_page}</h1>', unsafe_allow_html=True)

    if st.session_state.current_page == "Algoritmos de Optimizaci√≥n":
        st.markdown("""
        <div class="grid-background">
            <h2>Bienvenido a la Secci√≥n de Algoritmos</h2>
            <p>Selecciona un m√©todo del men√∫ lateral para comenzar a experimentar.</p>
            <p>Puedes elegir entre m√©todos univariados (una variable) y multivariados (m√∫ltiples variables).</p>
        </div>
        """, unsafe_allow_html=True)
        st.markdown("## M√©todos Disponibles")

    # --- L√≥gica de enrutamiento para cada algoritmo ---
    elif st.session_state.current_page == "B√∫squeda Unidireccional":
        show_busqueda_unidireccional(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "B√∫squeda Exhaustiva":
        show_busqueda_exhaustiva(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "M√©todo de fase de acotamiento":
        show_fase_acotamiento(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "M√©todo de Eliminaci√≥n de Regiones":
        show_region_elimination(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "Intervalos por la mitad":
        show_intervalos_mitad(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "Fibonacci Search Method":
        show_fibonacci_search(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "Golden Section Search Method":
        show_golden_section_search(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "M√©todo de Newton-Raphson":
        show_newton_raphson(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "M√©todo de Bisecci√≥n":
        show_biseccion_search(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada, evaluar_derivada)
    elif st.session_state.current_page == "M√©todo de la secante":
        show_metodo_secante(FUNCIONES_UNIVARIADAS, evaluar_funcion_univariada)
    elif st.session_state.current_page == "Nelder-Mead Simplex":
        show_nelder_mead(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "Hooke-Jeeves - Movimiento exploratorio":
        show_hooke_jeeves(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "Random Walk (Caminata Aleatoria)":
        show_random_walk(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "Ascenso/Descenso de la colina (Hill Climbing)":
        show_hill_climbing(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "Recocido Simulado (Simulated Annealing)":
        show_simulated_annealing(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "M√©todo de Cauchy":
        show_cauchy_method(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "M√©todo de Newton":
        show_newton_method(FUNCIONES_MULTIVARIADAS, evaluar_funcion_multivariada)
    elif st.session_state.current_page == "Gradiente Conjugado":
        show_conjugate_gradient(FUNCIONES_MULTIVARIADAS)

# --- Footer ---
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #7f8c8d; margin-top: 20px;'>
    ¬© 2025 - Proyecto Final de Optimizaci√≥n | Desarrollado con ‚ù§Ô∏è usando Streamlit para la materia de Optimizaci√≥n
</div>
""", unsafe_allow_html=True)